{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Business/Business.js","components/BusinessList/BusinessList.js","util/yelp.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["SearchBar","props","state","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","this","setState","event","target","value","searchYelp","preventDefault","Object","keys","map","sortByOptionValue","className","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","React","Component","Business","src","business","imageSrc","alt","name","address","city","zipCode","category","toUpperCase","rating","reviewCount","BusinessList","businesses","id","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","ReactDOM","render","StrictMode","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"2RAsFeA,E,kDA/EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,SAAU,GACVC,OAAQ,cAGZ,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAIpB,EAAKG,cAAgB,CACjB,aAAc,aACd,gBAAkB,SAClB,gBAAkB,gBAjBP,E,kDAsBnB,SAAeC,GACX,OAAIC,KAAKV,MAAMG,SAAWM,EACf,SAEJ,K,gCAGX,SAAmBA,GACfC,KAAKC,SAAS,CAACR,OAAQM,M,8BAG3B,SAAiBG,GACbF,KAAKC,SAAS,CAACV,KAAMW,EAAMC,OAAOC,U,kCAGtC,SAAqBF,GACjBF,KAAKC,SAAS,CAACT,SAAUU,EAAMC,OAAOC,U,0BAG1C,SAAaF,GACTF,KAAKX,MAAMgB,WAAWL,KAAKV,MAAMC,KAAMS,KAAKV,MAAME,SAAUQ,KAAKV,MAAMG,QAEvES,EAAMI,mB,iCAKV,WAAuB,IAAD,OAClB,OAAOC,OAAOC,KAAKR,KAAKF,eAAeW,KAAI,SAAAV,GACvC,IAAIW,EAAoB,EAAKZ,cAAcC,GAC3C,OAAQ,oBAAIY,UAAW,EAAKC,eAAeF,GAE3CG,QAAS,EAAKC,mBAAmBnB,KAAK,EAAMe,GAFpC,SAGTX,GAFMW,Q,oBAMb,WACI,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,6BACKX,KAAKe,0BAGd,sBAAKJ,UAAU,mBAAf,UACI,uBAAOK,YAAY,oBAAoBC,SAAUjB,KAAKN,mBACtD,uBAAOsB,YAAY,SAASC,SAAUjB,KAAKJ,0BAE/C,qBAAKe,UAAU,mBAAf,SACI,mBAAGE,QAASb,KAAKH,aAAjB,+B,GAzEIqB,IAAMC,WC0BfC,G,wKAxBX,WACI,OACI,sBAAKT,UAAU,WAAf,UACM,qBAAKA,UAAU,kBAAf,SACE,qBAAKU,IAAKrB,KAAKX,MAAMiC,SAASC,SAAUC,IAAI,OAE9C,6BAAKxB,KAAKX,MAAMiC,SAASG,OACzB,sBAAKd,UAAU,uBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,4BAAIX,KAAKX,MAAMiC,SAASI,UACxB,4BAAI1B,KAAKX,MAAMiC,SAASK,OACxB,sCAAO3B,KAAKX,MAAMiC,SAAShC,MAA3B,YAAoCU,KAAKX,MAAMiC,SAASM,cAE1D,sBAAKjB,UAAU,mBAAf,UACE,6BAAKX,KAAKX,MAAMiC,SAASO,SAASC,gBAClC,oBAAInB,UAAU,SAAd,mBAA2BX,KAAKX,MAAMiC,SAASS,OAA/C,YACA,sCAAO/B,KAAKX,MAAMiC,SAASU,YAA3B,2B,GAjBCd,IAAMC,YCgBdc,E,4JAdX,WACG,OACC,qBAAKtB,UAAU,eAAf,SAEGX,KAAKX,MAAM6C,WAAWzB,KAAK,SAAAa,GACvB,OAAO,cAAC,EAAD,CAAUA,SAAUA,GAAeA,EAASa,a,GANvCjB,IAAMC,WCqBlBiB,EA3BF,CACTC,OADS,SACF9C,EAAMC,EAAUC,GACnB,OAAO6C,MAAM,sFAAD,OAAuF/C,EAAvF,qBAAwGC,EAAxG,oBAA4HC,GAAU,CAC9I8C,QAAS,CACLC,cAAc,UAAD,OANd,uIAQJC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACpBF,MAAK,SAAAG,GACL,GAAIA,EAAatB,SACb,OAAOsB,EAAatB,SAASb,KAAI,SAAAa,GAAQ,MAAK,CACtCa,GAAIb,EAASa,GACbZ,SAAUD,EAASuB,UACnBpB,KAAMH,EAASG,KACfC,QAASJ,EAAS9B,SAASsD,SAC3BnB,KAAML,EAAS9B,SAASmC,KACxBrC,MAAOgC,EAAShC,MAChBsC,QAASN,EAAS9B,SAASuD,SAC3BlB,SAAUP,EAAS0B,WAAW,GAAGC,MACjClB,OAAQT,EAASS,OACjBC,YAAaV,EAAS4B,sBCc3BC,E,kDA1Bb,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX4C,WAAa,IAEf,EAAK7B,WAAa,EAAKA,WAAWV,KAAhB,gBALD,E,8CASnB,SAAWJ,EAAMC,EAAUC,GAAS,IAAD,OACjC2C,EAAKC,OAAO9C,EAAMC,EAAUC,GAAQgD,MAAK,SAAAP,GACvC,EAAKjC,SAAS,CAAEiC,WAAYA,S,oBAIhC,WACE,OACE,sBAAKvB,UAAU,MAAf,UACE,2DACA,cAAC,EAAD,CAAWN,WAAYL,KAAKK,aAC5B,cAAC,EAAD,CAAc6B,WAAYlC,KAAKV,MAAM4C,oB,GArB3BhB,IAAMC,WCHxBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SCCqB,kBAAmBC,WAC9DC,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMC,GAAN,sBACXJ,UAAUK,cACPC,SAASH,GACTnB,MAAK,SAAAuB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5E,QACfmE,UAAUK,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,W","file":"static/js/main.37900e84.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        };\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n\r\n\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated' : 'rating',\r\n            'Most Reviewed' : 'review_count',\r\n        \r\n        };\r\n    };\r\n\r\n    getSortByClass(sortByOption) {\r\n        if (this.state.sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption});\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    handleLocationChange(event) {\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (<li className={this.getSortByClass(sortByOptionValue)}\r\n            key={sortByOptionValue}\r\n            onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n          {sortByOption}\r\n       </li>);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\r\n                    <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\n\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Business\">\r\n                  <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt=''/>\r\n                  </div>\r\n                  <h2>{this.props.business.name}</h2>\r\n                  <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                      <p>{this.props.business.address}</p>\r\n                      <p>{this.props.business.city}</p>\r\n                      <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                      <h3>{this.props.business.category.toUpperCase()}</h3>\r\n                      <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\r\n                      <p>{`${this.props.business.reviewCount} reviews`}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\n\r\nimport  Business  from '../Business/Business'\r\n\r\n\r\n\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n       return (\r\n        <div className=\"BusinessList\">\r\n           {\r\n           this.props.businesses.map( business => {\r\n               return <Business business={business} key={business.id} />\r\n           } )\r\n           }  \r\n\r\n        </div>\r\n       ) \r\n    }\r\n}\r\n\r\nexport default BusinessList;","const apiKey = 'BtPyJfeefV9NlLpJDRM1ScW9AUkNWKE7r1qjfTk83sWd1tseS67UzTqxp3dosicqrZoMSZ4hGZly0n6_SRty7SmJgJfA8k8-J4xHY-BBsQZzkAv3XFpsFmleSvzOYHYx';\r\n\r\nconst Yelp = {\r\n    search(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n    } ).then(jsonResponse => {\r\n        if (jsonResponse.business) {\r\n            return jsonResponse.business.map(business => ({\r\n                    id: business.id,\r\n                    imageSrc: business.image_url,\r\n                    name: business.name,\r\n                    address: business.location.address1,\r\n                    city: business.location.city,\r\n                    state: business.state,\r\n                    zipCode: business.location.zip_code,\r\n                    category: business.categories[0].title,\r\n                    rating: business.rating,\r\n                    reviewCount: business.review_count\r\n                }));\r\n            }       \r\n    });\r\n}\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport BusinessList from '../BusinessList/BusinessList';\nimport Yelp from '../../util/yelp';\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses : []\n    }\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({ businesses: businesses});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Where do you want to eat?</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}